//------------------------------------------------------------------------------
// <autogenerated>
//     This Oxygene source code was generated by a tool.
//     Runtime Version: 4.0.30319.34014
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

{$HIDE H7}
{$HIDE W1}
{$HIDE W27}
{$HIDE H11}

namespace DiskInfoWindowsForms;

interface

uses
  System,
  System.Collections.Generic,
  RemObjects.SDK,
  RemObjects.SDK.Types;
  
type
  IDiskInfoWindowsFormsService = public interface(RemObjects.SDK.IROService)
    method GetServerTime: System.DateTime;
    method CurrentDiskName: System.String;
    method VolumeName(DiskName: System.String): System.String;
    method DiskType(DiskName: System.String): System.String;
    method TotalDiskSize(DiskName: System.String): System.Int64;
    method TotalDiskFree(DiskName: System.String): System.Int64;
  end;
  
  DiskInfoWindowsFormsService_Proxy = public partial class(RemObjects.SDK.Proxy, IDiskInfoWindowsFormsService)
  protected 
    [System.CLSCompliantAttribute(false)]
    method __GetInterfaceName: System.String; override;
  public 
    constructor(aMessage: RemObjects.SDK.IMessage; aClientChannel: RemObjects.SDK.IClientChannel);
    constructor(aMessage: RemObjects.SDK.IMessage; aClientChannel: RemObjects.SDK.IClientChannel; aOverrideInterfaceName: System.String);
    constructor(aRemoteService: RemObjects.SDK.IRemoteService);
    constructor(aRemoteService: RemObjects.SDK.IRemoteService; aOverrideInterfaceName: System.String);
    constructor(aUri: System.Uri);
    constructor(aUrl: System.String);
    method GetServerTime: System.DateTime; virtual;
    method CurrentDiskName: System.String; virtual;
    method VolumeName(DiskName: System.String): System.String; virtual;
    method DiskType(DiskName: System.String): System.String; virtual;
    method TotalDiskSize(DiskName: System.String): System.Int64; virtual;
    method TotalDiskFree(DiskName: System.String): System.Int64; virtual;
  end;
  
  CoDiskInfoWindowsFormsService = public class
  public 
    class method &Create(aMessage: RemObjects.SDK.IMessage; aClientChannel: RemObjects.SDK.IClientChannel): IDiskInfoWindowsFormsService;
    class method &Create(aRemoteService: RemObjects.SDK.IRemoteService): IDiskInfoWindowsFormsService;
    class method &Create(aUri: System.Uri): IDiskInfoWindowsFormsService;
    class method &Create(aUrl: System.String): IDiskInfoWindowsFormsService;
  end;
  
  IDiskInfoWindowsFormsService_Async = public interface(RemObjects.SDK.IROService_Async)
    method BeginGetServerTime(__Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
    method EndGetServerTime(__AsyncResult: System.IAsyncResult): System.DateTime;
    method GetServerTimeAsync: System.Threading.Tasks.Task<System.DateTime>;
    method BeginCurrentDiskName(__Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
    method EndCurrentDiskName(__AsyncResult: System.IAsyncResult): System.String;
    method CurrentDiskNameAsync: System.Threading.Tasks.Task<System.String>;
    method BeginVolumeName(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
    method EndVolumeName(__AsyncResult: System.IAsyncResult): System.String;
    method VolumeNameAsync(DiskName: System.String): System.Threading.Tasks.Task<System.String>;
    method BeginDiskType(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
    method EndDiskType(__AsyncResult: System.IAsyncResult): System.String;
    method DiskTypeAsync(DiskName: System.String): System.Threading.Tasks.Task<System.String>;
    method BeginTotalDiskSize(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
    method EndTotalDiskSize(__AsyncResult: System.IAsyncResult): System.Int64;
    method TotalDiskSizeAsync(DiskName: System.String): System.Threading.Tasks.Task<System.Int64>;
    method BeginTotalDiskFree(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
    method EndTotalDiskFree(__AsyncResult: System.IAsyncResult): System.Int64;
    method TotalDiskFreeAsync(DiskName: System.String): System.Threading.Tasks.Task<System.Int64>;
  end;
  
  DiskInfoWindowsFormsService_AsyncProxy = public partial class(RemObjects.SDK.AsyncProxy, IDiskInfoWindowsFormsService_Async)
  protected 
    [System.CLSCompliantAttribute(false)]
    method __GetInterfaceName: System.String; override;
  public 
    constructor(aMessage: RemObjects.SDK.IMessage; aClientChannel: RemObjects.SDK.IClientChannel);
    constructor(aMessage: RemObjects.SDK.IMessage; aClientChannel: RemObjects.SDK.IClientChannel; aOverrideInterfaceName: System.String);
    constructor(aRemoteService: RemObjects.SDK.IRemoteService);
    constructor(aRemoteService: RemObjects.SDK.IRemoteService; aOverrideInterfaceName: System.String);
    constructor(aUri: System.Uri);
    constructor(aUrl: System.String);
    method BeginGetServerTime(__Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult; virtual;
    method EndGetServerTime(__AsyncResult: System.IAsyncResult): System.DateTime; virtual;
    method GetServerTimeAsync: System.Threading.Tasks.Task<System.DateTime>; virtual;
    method BeginCurrentDiskName(__Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult; virtual;
    method EndCurrentDiskName(__AsyncResult: System.IAsyncResult): System.String; virtual;
    method CurrentDiskNameAsync: System.Threading.Tasks.Task<System.String>; virtual;
    method BeginVolumeName(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult; virtual;
    method EndVolumeName(__AsyncResult: System.IAsyncResult): System.String; virtual;
    method VolumeNameAsync(DiskName: System.String): System.Threading.Tasks.Task<System.String>; virtual;
    method BeginDiskType(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult; virtual;
    method EndDiskType(__AsyncResult: System.IAsyncResult): System.String; virtual;
    method DiskTypeAsync(DiskName: System.String): System.Threading.Tasks.Task<System.String>; virtual;
    method BeginTotalDiskSize(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult; virtual;
    method EndTotalDiskSize(__AsyncResult: System.IAsyncResult): System.Int64; virtual;
    method TotalDiskSizeAsync(DiskName: System.String): System.Threading.Tasks.Task<System.Int64>; virtual;
    method BeginTotalDiskFree(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult; virtual;
    method EndTotalDiskFree(__AsyncResult: System.IAsyncResult): System.Int64; virtual;
    method TotalDiskFreeAsync(DiskName: System.String): System.Threading.Tasks.Task<System.Int64>; virtual;
  end;
  
implementation

{ DiskInfoWindowsFormsService_Proxy }

method DiskInfoWindowsFormsService_Proxy.__GetInterfaceName: System.String;
begin
  exit('DiskInfoWindowsFormsService');
end;

constructor DiskInfoWindowsFormsService_Proxy(aMessage: RemObjects.SDK.IMessage; aClientChannel: RemObjects.SDK.IClientChannel);
begin
  inherited constructor(aMessage, aClientChannel);
end;

constructor DiskInfoWindowsFormsService_Proxy(aMessage: RemObjects.SDK.IMessage; aClientChannel: RemObjects.SDK.IClientChannel; aOverrideInterfaceName: System.String);
begin
  inherited constructor(aMessage, aClientChannel, aOverrideInterfaceName);
end;

constructor DiskInfoWindowsFormsService_Proxy(aRemoteService: RemObjects.SDK.IRemoteService);
begin
  inherited constructor(aRemoteService);
end;

constructor DiskInfoWindowsFormsService_Proxy(aRemoteService: RemObjects.SDK.IRemoteService; aOverrideInterfaceName: System.String);
begin
  inherited constructor(aRemoteService, aOverrideInterfaceName);
end;

constructor DiskInfoWindowsFormsService_Proxy(aUri: System.Uri);
begin
  inherited constructor(aUri);
end;

constructor DiskInfoWindowsFormsService_Proxy(aUrl: System.String);
begin
  inherited constructor(aUrl);
end;

method DiskInfoWindowsFormsService_Proxy.GetServerTime: System.DateTime;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'GetServerTime');
  __LocalMessage.FinalizeMessage();
  __ClientChannel.Dispatch(__LocalMessage);
  var &Result: System.DateTime := __LocalMessage.ReadDateTime('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

method DiskInfoWindowsFormsService_Proxy.CurrentDiskName: System.String;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'CurrentDiskName');
  __LocalMessage.FinalizeMessage();
  __ClientChannel.Dispatch(__LocalMessage);
  var &Result: System.String := __LocalMessage.ReadAnsiString('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

method DiskInfoWindowsFormsService_Proxy.VolumeName(DiskName: System.String): System.String;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'VolumeName');
  __LocalMessage.WriteAnsiString('DiskName', DiskName);
  __LocalMessage.FinalizeMessage();
  __ClientChannel.Dispatch(__LocalMessage);
  var &Result: System.String := __LocalMessage.ReadAnsiString('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

method DiskInfoWindowsFormsService_Proxy.DiskType(DiskName: System.String): System.String;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'DiskType');
  __LocalMessage.WriteAnsiString('DiskName', DiskName);
  __LocalMessage.FinalizeMessage();
  __ClientChannel.Dispatch(__LocalMessage);
  var &Result: System.String := __LocalMessage.ReadAnsiString('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

method DiskInfoWindowsFormsService_Proxy.TotalDiskSize(DiskName: System.String): System.Int64;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'TotalDiskSize');
  __LocalMessage.WriteAnsiString('DiskName', DiskName);
  __LocalMessage.FinalizeMessage();
  __ClientChannel.Dispatch(__LocalMessage);
  var &Result: System.Int64 := __LocalMessage.ReadInt64('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

method DiskInfoWindowsFormsService_Proxy.TotalDiskFree(DiskName: System.String): System.Int64;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'TotalDiskFree');
  __LocalMessage.WriteAnsiString('DiskName', DiskName);
  __LocalMessage.FinalizeMessage();
  __ClientChannel.Dispatch(__LocalMessage);
  var &Result: System.Int64 := __LocalMessage.ReadInt64('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

{ CoDiskInfoWindowsFormsService }

class method CoDiskInfoWindowsFormsService.&Create(aMessage: RemObjects.SDK.IMessage; aClientChannel: RemObjects.SDK.IClientChannel): IDiskInfoWindowsFormsService;
begin
  exit(new DiskInfoWindowsFormsService_Proxy(aMessage, aClientChannel));
end;

class method CoDiskInfoWindowsFormsService.&Create(aRemoteService: RemObjects.SDK.IRemoteService): IDiskInfoWindowsFormsService;
begin
  exit(new DiskInfoWindowsFormsService_Proxy(aRemoteService));
end;

class method CoDiskInfoWindowsFormsService.&Create(aUri: System.Uri): IDiskInfoWindowsFormsService;
begin
  exit(new DiskInfoWindowsFormsService_Proxy(aUri));
end;

class method CoDiskInfoWindowsFormsService.&Create(aUrl: System.String): IDiskInfoWindowsFormsService;
begin
  exit(new DiskInfoWindowsFormsService_Proxy(aUrl));
end;

{ DiskInfoWindowsFormsService_AsyncProxy }

method DiskInfoWindowsFormsService_AsyncProxy.__GetInterfaceName: System.String;
begin
  exit('DiskInfoWindowsFormsService');
end;

constructor DiskInfoWindowsFormsService_AsyncProxy(aMessage: RemObjects.SDK.IMessage; aClientChannel: RemObjects.SDK.IClientChannel);
begin
  inherited constructor(aMessage, aClientChannel);
end;

constructor DiskInfoWindowsFormsService_AsyncProxy(aMessage: RemObjects.SDK.IMessage; aClientChannel: RemObjects.SDK.IClientChannel; aOverrideInterfaceName: System.String);
begin
  inherited constructor(aMessage, aClientChannel, aOverrideInterfaceName);
end;

constructor DiskInfoWindowsFormsService_AsyncProxy(aRemoteService: RemObjects.SDK.IRemoteService);
begin
  inherited constructor(aRemoteService);
end;

constructor DiskInfoWindowsFormsService_AsyncProxy(aRemoteService: RemObjects.SDK.IRemoteService; aOverrideInterfaceName: System.String);
begin
  inherited constructor(aRemoteService, aOverrideInterfaceName);
end;

constructor DiskInfoWindowsFormsService_AsyncProxy(aUri: System.Uri);
begin
  inherited constructor(aUri);
end;

constructor DiskInfoWindowsFormsService_AsyncProxy(aUrl: System.String);
begin
  inherited constructor(aUrl);
end;

method DiskInfoWindowsFormsService_AsyncProxy.BeginGetServerTime(__Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'GetServerTime');
  __LocalMessage.FinalizeMessage();
  exit(__ClientChannel.AsyncDispatch(__LocalMessage, __Callback, __UserData));
end;

method DiskInfoWindowsFormsService_AsyncProxy.EndGetServerTime(__AsyncResult: System.IAsyncResult): System.DateTime;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := (__AsyncResult as RemObjects.SDK.IClientAsyncResult).Message;
  var &Result: System.DateTime := __LocalMessage.ReadDateTime('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

method DiskInfoWindowsFormsService_AsyncProxy.GetServerTimeAsync: System.Threading.Tasks.Task<System.DateTime>;
begin
  exit(System.Threading.Tasks.Task<System.DateTime>.Factory.FromAsync(self.BeginGetServerTime(nil, nil), new System.Func<System.IAsyncResult, System.DateTime>(@self.EndGetServerTime)));
end;

method DiskInfoWindowsFormsService_AsyncProxy.BeginCurrentDiskName(__Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'CurrentDiskName');
  __LocalMessage.FinalizeMessage();
  exit(__ClientChannel.AsyncDispatch(__LocalMessage, __Callback, __UserData));
end;

method DiskInfoWindowsFormsService_AsyncProxy.EndCurrentDiskName(__AsyncResult: System.IAsyncResult): System.String;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := (__AsyncResult as RemObjects.SDK.IClientAsyncResult).Message;
  var &Result: System.String := __LocalMessage.ReadAnsiString('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

method DiskInfoWindowsFormsService_AsyncProxy.CurrentDiskNameAsync: System.Threading.Tasks.Task<System.String>;
begin
  exit(System.Threading.Tasks.Task<System.String>.Factory.FromAsync(self.BeginCurrentDiskName(nil, nil), new System.Func<System.IAsyncResult, System.String>(@self.EndCurrentDiskName)));
end;

method DiskInfoWindowsFormsService_AsyncProxy.BeginVolumeName(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'VolumeName');
  __LocalMessage.WriteAnsiString('DiskName', DiskName);
  __LocalMessage.FinalizeMessage();
  exit(__ClientChannel.AsyncDispatch(__LocalMessage, __Callback, __UserData));
end;

method DiskInfoWindowsFormsService_AsyncProxy.EndVolumeName(__AsyncResult: System.IAsyncResult): System.String;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := (__AsyncResult as RemObjects.SDK.IClientAsyncResult).Message;
  var &Result: System.String := __LocalMessage.ReadAnsiString('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

method DiskInfoWindowsFormsService_AsyncProxy.VolumeNameAsync(DiskName: System.String): System.Threading.Tasks.Task<System.String>;
begin
  exit(System.Threading.Tasks.Task<System.String>.Factory.FromAsync(self.BeginVolumeName(DiskName, nil, nil), new System.Func<System.IAsyncResult, System.String>(@self.EndVolumeName)));
end;

method DiskInfoWindowsFormsService_AsyncProxy.BeginDiskType(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'DiskType');
  __LocalMessage.WriteAnsiString('DiskName', DiskName);
  __LocalMessage.FinalizeMessage();
  exit(__ClientChannel.AsyncDispatch(__LocalMessage, __Callback, __UserData));
end;

method DiskInfoWindowsFormsService_AsyncProxy.EndDiskType(__AsyncResult: System.IAsyncResult): System.String;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := (__AsyncResult as RemObjects.SDK.IClientAsyncResult).Message;
  var &Result: System.String := __LocalMessage.ReadAnsiString('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

method DiskInfoWindowsFormsService_AsyncProxy.DiskTypeAsync(DiskName: System.String): System.Threading.Tasks.Task<System.String>;
begin
  exit(System.Threading.Tasks.Task<System.String>.Factory.FromAsync(self.BeginDiskType(DiskName, nil, nil), new System.Func<System.IAsyncResult, System.String>(@self.EndDiskType)));
end;

method DiskInfoWindowsFormsService_AsyncProxy.BeginTotalDiskSize(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'TotalDiskSize');
  __LocalMessage.WriteAnsiString('DiskName', DiskName);
  __LocalMessage.FinalizeMessage();
  exit(__ClientChannel.AsyncDispatch(__LocalMessage, __Callback, __UserData));
end;

method DiskInfoWindowsFormsService_AsyncProxy.EndTotalDiskSize(__AsyncResult: System.IAsyncResult): System.Int64;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := (__AsyncResult as RemObjects.SDK.IClientAsyncResult).Message;
  var &Result: System.Int64 := __LocalMessage.ReadInt64('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

method DiskInfoWindowsFormsService_AsyncProxy.TotalDiskSizeAsync(DiskName: System.String): System.Threading.Tasks.Task<System.Int64>;
begin
  exit(System.Threading.Tasks.Task<System.Int64>.Factory.FromAsync(self.BeginTotalDiskSize(DiskName, nil, nil), new System.Func<System.IAsyncResult, System.Int64>(@self.EndTotalDiskSize)));
end;

method DiskInfoWindowsFormsService_AsyncProxy.BeginTotalDiskFree(DiskName: System.String; __Callback: System.AsyncCallback; __UserData: System.Object): System.IAsyncResult;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := self.__GetMessage();
  __LocalMessage.InitializeRequestMessage(__ClientChannel, 'DiskInfoWindowsFormsLibrary', __GetActiveInterfaceName(), 'TotalDiskFree');
  __LocalMessage.WriteAnsiString('DiskName', DiskName);
  __LocalMessage.FinalizeMessage();
  exit(__ClientChannel.AsyncDispatch(__LocalMessage, __Callback, __UserData));
end;

method DiskInfoWindowsFormsService_AsyncProxy.EndTotalDiskFree(__AsyncResult: System.IAsyncResult): System.Int64;
begin
  var __LocalMessage: RemObjects.SDK.IMessage := (__AsyncResult as RemObjects.SDK.IClientAsyncResult).Message;
  var &Result: System.Int64 := __LocalMessage.ReadInt64('Result');
  __LocalMessage.Clear();
  exit(&Result);
end;

method DiskInfoWindowsFormsService_AsyncProxy.TotalDiskFreeAsync(DiskName: System.String): System.Threading.Tasks.Task<System.Int64>;
begin
  exit(System.Threading.Tasks.Task<System.Int64>.Factory.FromAsync(self.BeginTotalDiskFree(DiskName, nil, nil), new System.Func<System.IAsyncResult, System.Int64>(@self.EndTotalDiskFree)));
end;

end.
