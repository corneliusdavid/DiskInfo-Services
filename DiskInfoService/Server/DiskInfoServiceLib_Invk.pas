//------------------------------------------------------------------------------
// <autogenerated>
//     This Oxygene source code was generated by a tool.
//     Runtime Version: 4.0.30319.34014
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

{$HIDE H7}
{$HIDE W1}
{$HIDE W27}
{$HIDE H11}

namespace DiskInfoService;

interface

uses
  System,
  RemObjects.SDK,
  RemObjects.SDK.Server,
  RemObjects.SDK.Types;
  
type
  [RemObjects.SDK.Server.Invoker]
  [System.Reflection.ObfuscationAttribute(Exclude := true)]
  DiskInfoService_Invoker = public class(RemObjects.SDK.Server.Invoker)
  public 
    constructor;
    class method Invoke_GetServerTime(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
    class method Invoke_CurrentDiskName(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
    class method Invoke_VolumeName(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
    class method Invoke_DiskType(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
    class method Invoke_TotalDiskSize(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
    class method Invoke_TotalDiskFree(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
  end;
  
  [RemObjects.SDK.Activator]
  [System.Reflection.ObfuscationAttribute(Exclude := true, ApplyToMembers := false)]
  DiskInfoService_Activator = public class(RemObjects.SDK.Server.ServiceActivator)
  public 
    constructor;
    method CreateInstance: RemObjects.SDK.IROService; override;
  end;
  
implementation

{ DiskInfoService_Invoker }

constructor DiskInfoService_Invoker;
begin
  inherited constructor();
end;

class method DiskInfoService_Invoker.Invoke_GetServerTime(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
var
  &Result: System.DateTime;
begin
  &Result := (__Instance as IDiskInfoService).GetServerTime();
  __Message.InitializeResponseMessage(__ServerChannelInfo, 'DiskInfoServiceLib', 'DiskInfoService', 'GetServerTimeResponse');
  __Message.WriteDateTime('Result', &Result);
  __Message.FinalizeMessage();
  __oResponseOptions := RemObjects.SDK.Server.ResponseOptions.roDefault;
end;

class method DiskInfoService_Invoker.Invoke_CurrentDiskName(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
var
  &Result: System.String;
begin
  &Result := (__Instance as IDiskInfoService).CurrentDiskName();
  __Message.InitializeResponseMessage(__ServerChannelInfo, 'DiskInfoServiceLib', 'DiskInfoService', 'CurrentDiskNameResponse');
  __Message.WriteAnsiString('Result', &Result);
  __Message.FinalizeMessage();
  __oResponseOptions := RemObjects.SDK.Server.ResponseOptions.roDefault;
end;

class method DiskInfoService_Invoker.Invoke_VolumeName(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
var
  &Result: System.String;
begin
  var DiskName: System.String := __Message.ReadAnsiString('DiskName');
  &Result := (__Instance as IDiskInfoService).VolumeName(DiskName);
  __Message.InitializeResponseMessage(__ServerChannelInfo, 'DiskInfoServiceLib', 'DiskInfoService', 'VolumeNameResponse');
  __Message.WriteAnsiString('Result', &Result);
  __Message.FinalizeMessage();
  __oResponseOptions := RemObjects.SDK.Server.ResponseOptions.roDefault;
end;

class method DiskInfoService_Invoker.Invoke_DiskType(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
var
  &Result: System.String;
begin
  var DiskName: System.String := __Message.ReadAnsiString('DiskName');
  &Result := (__Instance as IDiskInfoService).DiskType(DiskName);
  __Message.InitializeResponseMessage(__ServerChannelInfo, 'DiskInfoServiceLib', 'DiskInfoService', 'DiskTypeResponse');
  __Message.WriteAnsiString('Result', &Result);
  __Message.FinalizeMessage();
  __oResponseOptions := RemObjects.SDK.Server.ResponseOptions.roDefault;
end;

class method DiskInfoService_Invoker.Invoke_TotalDiskSize(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
var
  &Result: System.Int64;
begin
  var DiskName: System.String := __Message.ReadAnsiString('DiskName');
  &Result := (__Instance as IDiskInfoService).TotalDiskSize(DiskName);
  __Message.InitializeResponseMessage(__ServerChannelInfo, 'DiskInfoServiceLib', 'DiskInfoService', 'TotalDiskSizeResponse');
  __Message.WriteInt64('Result', &Result);
  __Message.FinalizeMessage();
  __oResponseOptions := RemObjects.SDK.Server.ResponseOptions.roDefault;
end;

class method DiskInfoService_Invoker.Invoke_TotalDiskFree(__Instance: RemObjects.SDK.IROService; __Message: RemObjects.SDK.IMessage; __ServerChannelInfo: RemObjects.SDK.Server.IServerChannelInfo; out __oResponseOptions: RemObjects.SDK.Server.ResponseOptions);
var
  &Result: System.Int64;
begin
  var DiskName: System.String := __Message.ReadAnsiString('DiskName');
  &Result := (__Instance as IDiskInfoService).TotalDiskFree(DiskName);
  __Message.InitializeResponseMessage(__ServerChannelInfo, 'DiskInfoServiceLib', 'DiskInfoService', 'TotalDiskFreeResponse');
  __Message.WriteInt64('Result', &Result);
  __Message.FinalizeMessage();
  __oResponseOptions := RemObjects.SDK.Server.ResponseOptions.roDefault;
end;

{ DiskInfoService_Activator }

constructor DiskInfoService_Activator;
begin
  inherited constructor();
end;

method DiskInfoService_Activator.CreateInstance: RemObjects.SDK.IROService;
begin
  exit(new DiskInfoService());
end;

end.
