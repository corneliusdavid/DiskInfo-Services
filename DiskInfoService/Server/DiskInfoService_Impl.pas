//------------------------------------------------------------------------------
// <autogenerated>
//     This Oxygene source code was generated by a tool.
//     Runtime Version: 4.0.30319.34014
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

{$HIDE H7}
{$HIDE W1}
{$HIDE W27}
{$HIDE H11}

namespace DiskInfoService;

interface

uses
  System,
  RemObjects.SDK,
  RemObjects.SDK.Types,
  RemObjects.SDK.Server,
  RemObjects.SDK.Server.ClassFactories;
  
type
  [RemObjects.SDK.Server.ClassFactories.StandardClassFactory]
  [RemObjects.SDK.Server.Service(Name := 'DiskInfoService', InvokerClass := typeOf(DiskInfoService_Invoker), ActivatorClass := typeOf(DiskInfoService_Activator))]
  DiskInfoService = public class(RemObjects.SDK.Server.Service, IDiskInfoService)
  private 
    method InitializeComponent;
    var components: System.ComponentModel.Container := nil;
  protected 
    method Dispose(disposing: System.Boolean); override;
  public 
    constructor;
    constructor(sessionManager: ISessionManager; eventManager: IEventSinkManager);
    method GetServerTime: System.DateTime; virtual;
    method CurrentDiskName: System.String; virtual;
    method VolumeName(DiskName: System.String): System.String; virtual;
    method DiskType(DiskName: System.String): System.String; virtual;
    method TotalDiskSize(DiskName: System.String): System.Int64; virtual;
    method TotalDiskFree(DiskName: System.String): System.Int64; virtual;
  end;
  
implementation

uses
  DiskInfoLib;

{ DiskInfoService }

constructor DiskInfoService;
begin
  constructor(nil, nil);
end;

constructor DiskInfoService(sessionManager: ISessionManager; eventManager: IEventSinkManager);
begin
  inherited constructor(sessionManager, eventManager);
  self.InitializeComponent();
end;

method DiskInfoService.InitializeComponent;
begin
end;

method DiskInfoService.Dispose(disposing: System.Boolean);
begin
  if disposing then begin
    if (self.components <> nil) then begin
      self.components.Dispose();
    end;
  end;
  inherited Dispose(disposing);
end;

method DiskInfoService.GetServerTime: System.DateTime;
begin
  result := DateTime.Now;
end;

method DiskInfoService.CurrentDiskName: String;
var
  di: DiskInfo := new DiskInfo;
begin
  result := di.CurrentDiskName;
end;

method DiskInfoService.VolumeName(DiskName: String): String;
var
  di: DiskInfo := new DiskInfo;
begin
  result := di.VolumeName(DiskName);
end;

method DiskInfoService.DiskType(DiskName: String): String;
var
  di: DiskInfo := new DiskInfo;
begin
  result := di.DiskType(DiskName);
end;

method DiskInfoService.TotalDiskSize(DiskName: String): Int64;
var
  di: DiskInfo := new DiskInfo;
begin
  result := di.TotalDiskSize(DiskName);
end;

method DiskInfoService.TotalDiskFree(DiskName: String): Int64;
var
  di: DiskInfo := new DiskInfo;
begin
  result := di.TotalDiskFree(DiskName);
end;

end.
